{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/sample-date-picker-ngmodel/index.ts","webpack:///./src/app/sample-date-picker-ngmodel/sample-date-picker-ngmodel.html","webpack:///./src/app/sample-date-picker-ngmodel/sample-date-picker-ngmodel.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".pagecontent {\\n  margin: 10px 300px;\\n}\\n\\n.maintitle {\\n  background-color: #EEE;\\n  height: 180px;\\n  border-bottom: 1px solid #CCC;\\n  background: linear-gradient(to right, rgba(44, 83, 158, 1) 0%, rgba(44, 83, 158, 1) 100%);\\n  text-align: center;\\n}\\n\\n.maintitle div:first-child {\\n  display: inline-block;\\n  color: #FFF;\\n  font-size: 46px;\\n  font-weight: bold;\\n  margin-top: 48px;\\n}\\n\\n.maintitle div:last-child {\\n  color: #FFF;\\n  font-size: 18px;\\n}\\n\\n.normalmode {\\n  margin-bottom: 340px;\\n}\\n\\n.inlinemode {\\n  margin-bottom: 340px;\\n}\\n\\n.tabcontainer {\\n  display: table;\\n  width: 100%;\\n  border-spacing: 2px;\\n}\\n\\n.tab {\\n  display: table-cell;\\n  border-radius: 4px;\\n  width: 33.33333%;\\n  padding: 8px 0;\\n  text-align: center;\\n}\\n\\n.activetab {\\n  background-color: #2C539E;\\n  color: #FFF;\\n}\\n\\n.inactivetab {\\n  color: #2C539E;\\n}\\n\\n.inactivetab:hover {\\n  background-color: #EEE;\\n  cursor: pointer;\\n  text-decoration: underline;\\n}\\n\\n.pagetext {\\n  margin: 20px 0;\\n}\\n\\nhr {\\n  margin: 6px 0;\\n  border: none;\\n  height: 1px;\\n  background-image: linear-gradient(to right, #DDD, #555, #DDD);\\n}\\n\\n@media screen and (max-width: 1200px) {\\n  .pagecontent {\\n    margin: 10px 40px;\\n  }\\n}\\n\"","module.exports = \"<div class=\\\"maintitle\\\">\\n    <div>ngx-mydatepicker</div>\\n    <div>Angular date picker</div>\\n</div>\\n<div class=\\\"pagecontent\\\">\\n    <div class=\\\"tabcontainer\\\">\\n        <div class=\\\"tab activetab\\\">ngx-mydatepicker</div>\\n        <div class=\\\"tab inactivetab\\\" (click)=\\\"toMyDatePicker()\\\">mydatepicker</div>\\n        <div class=\\\"tab inactivetab\\\" (click)=\\\"toDateRangePicker()\\\">mydaterangepicker</div>\\n    </div>\\n\\n    <div>\\n        <hr/>\\n        <div class=\\\"pagetext\\\">Attribute directive date picker. You have full control to the input box and the buttons of the input box. Otherwise this is similar as mydatepicker. The date picker below has bootstrap 3.3.7 styled input box with glyphicons.</div>\\n        <div class=\\\"normalmode\\\">\\n            <sample-date-picker-ngmodel>loading...</sample-date-picker-ngmodel>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngx-mydatepicker-app',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  moduleId: module.id,\n})\n\nexport class MyDatePickerApp {\n\n  constructor() {\n    console.log('constructor: MyDatePickerApp');\n  }\n\n  toMyDatePicker(): void {\n    window.open('http://kekeh.github.io/mydatepicker', '_self');\n  }\n\n  toDateRangePicker(): void {\n    window.open('http://kekeh.github.io/mydaterangepicker', '_self');\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { MyDatePickerApp } from './app.component';\n\nimport {SampleDatePickerNgModel} from './sample-date-picker-ngmodel';\nimport {NgxMyDatePickerModule} from 'ngx-mydatepicker';\n\n@NgModule({\n  declarations: [\n    MyDatePickerApp, SampleDatePickerNgModel\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    NgxMyDatePickerModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [MyDatePickerApp]\n})\nexport class AppModule { }\n","export * from './sample-date-picker-ngmodel';","module.exports = \"<style>\\n  .border {\\n    padding: 4px;\\n    border-radius: 4px;\\n    float: right;\\n    width: 100%;\\n  }\\n  .okDate {\\n    color: #3c764d;\\n    background-color: #dff0d6;\\n    border: 1px solid #d6e9c2;\\n  }\\n  .invalidDate {\\n    color: #a94444;\\n    background-color: #f1dede;\\n    border: 1px solid #ebccd2;\\n  }\\n\\n  .settingstable {\\n    width: 100%;\\n    border: none;\\n  }\\n  .settingstable tr td {\\n    width: 50%;\\n    border: none;\\n  }\\n  .buttonrow {\\n    margin: 15px 0;\\n  }\\n  ::-ms-clear {\\n    display: none;\\n  }\\n  .btnicon {\\n    top: 2px;\\n  }\\n</style>\\n\\n<div>\\n  <table class=\\\"settingstable\\\">\\n    <tr>\\n      <td>\\n        <label>\\n          <span>Show today button:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onShowTodayButton($event.currentTarget.checked)\\\"\\n                 [checked]=\\\"true\\\">\\n        </label>\\n      </td>\\n      <td>\\n        <label>\\n          <span>Open selector top of input field:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\"\\n                 (change)=\\\"onOpenSelectorTopOfInput($event.currentTarget.checked)\\\" [checked]=\\\"false\\\">\\n        </label>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <label>\\n          <span>Align selector right:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onAlignSelectorRight($event.currentTarget.checked)\\\"\\n                 [checked]=\\\"false\\\">\\n        </label>\\n      </td>\\n      <td>\\n        <label>\\n          <span>Show selector arrow:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onShowSelectorArrow($event.currentTarget.checked)\\\"\\n                 [checked]=\\\"true\\\">\\n        </label>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <label>\\n          <span>Disable today:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onDisableToday($event.currentTarget.checked)\\\"\\n                 [checked]=\\\"false\\\">\\n        </label>\\n      </td>\\n      <td>\\n        <label>\\n          <span>Mark today:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onMarkToday($event.currentTarget.checked)\\\"\\n                 [checked]=\\\"false\\\">\\n        </label>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <label>\\n          <span>Highlight today:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onHighlightToday($event.currentTarget.checked)\\\"\\n                 [checked]=\\\"false\\\">\\n        </label>\\n      </td>\\n      <td>\\n        <label>\\n          <span>Show week numbers:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onShowWeekNumbers($event.currentTarget.checked)\\\"\\n                 [checked]=\\\"false\\\">\\n        </label>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <label>\\n          <span>Allow selection only current month:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onAllowSelectionOnlyCurrentMonth($event.currentTarget.checked)\\\" [checked]=\\\"true\\\">\\n        </label>\\n      </td>\\n      <td>\\n        <label>\\n          <span>Append selector to body:</span>\\n          <input style=\\\"cursor: pointer\\\" type=\\\"checkbox\\\" (change)=\\\"onAppendSelectorToBody($event.currentTarget.checked)\\\" [checked]=\\\"false\\\">\\n        </label>\\n      </td>\\n    </tr>\\n\\n    <tr>\\n      <td>\\n        <label>\\n          <span style=\\\"margin-right: 10px\\\">Selector size:</span>\\n          <span>\\n              <select style=\\\"padding: 2px;cursor: pointer;font-size: 11px;min-width: 60px;\\\" (change)=\\\"onSelectorSize($event.target.value)\\\">\\n                  <option *ngFor=\\\"let s of selectorSizes\\\">{{s}}</option>\\n              </select>\\n          </span>\\n        </label>\\n      </td>\\n      <td>\\n\\n      </td>\\n    </tr>\\n\\n\\n    <a href=\\\"https://github.com/kekeh/ngx-mydatepicker#options-attribute\\\">all options...</a>\\n\\n    <div class=\\\"buttonrow\\\">\\n      <button style=\\\"cursor: pointer\\\" type=\\\"button\\\" (click)=\\\"dp.toggleCalendar();$event.stopPropagation()\\\">Toggle</button>\\n      <button style=\\\"cursor: pointer\\\" type=\\\"button\\\" (click)=\\\"dp.openCalendar();$event.stopPropagation()\\\">Open</button>\\n      <button style=\\\"cursor: pointer\\\" type=\\\"button\\\" (click)=\\\"dp.closeCalendar();$event.stopPropagation()\\\">Close</button>\\n      <button style=\\\"cursor: pointer\\\" type=\\\"button\\\" (click)=\\\"clearDate()\\\">Clear</button>\\n    </div>\\n\\n  </table>\\n\\n  <table style=\\\"width: 100%\\\">\\n    <tr>\\n      <td style=\\\"vertical-align: top; width: 220px\\\">\\n        <form>\\n          <div class=\\\"input-group\\\">\\n\\n            <input class=\\\"form-control\\\" style=\\\"float:none\\\" placeholder=\\\"Select a date\\\" ngx-mydatepicker name=\\\"mydate\\\"\\n                   [(ngModel)]=\\\"model\\\" [options]=\\\"myDatePickerOptions\\\" [defaultMonth]=\\\"defMonth\\\" #dp=\\\"ngx-mydatepicker\\\"\\n                   (dateChanged)=\\\"onDateChanged($event)\\\" (calendarViewChanged)=\\\"onCalendarViewChanged($event)\\\"\\n                   (calendarToggle)=\\\"onCalendarToggle($event)\\\" (inputFieldChanged)=\\\"onInputFieldChanged($event)\\\"\\n                   autocomplete=\\\"off\\\"/>\\n\\n            <span class=\\\"input-group-btn\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"dp.clearDate();$event.stopPropagation()\\\"><i class=\\\"glyphicon glyphicon-remove btnicon\\\"></i></button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"dp.toggleCalendar();$event.stopPropagation()\\\"><i class=\\\"glyphicon glyphicon-calendar btnicon\\\"></i></button>\\n            </span>\\n\\n          </div>\\n        </form>\\n      </td>\\n      <td style=\\\"vertical-align: top;padding-left: 20px\\\">\\n        <div *ngIf=\\\"inputText !== ''\\\" class=\\\"border\\\" [ngClass]=\\\"{'okDate': validDate, 'invalidDate': !validDate}\\\">\\n          <span *ngIf=\\\"validDate\\\">{{selectedTextNormal}}</span>\\n          <span *ngIf=\\\"!validDate\\\">Invalid date</span>\\n        </div>\\n      </td>\\n  </table>\\n\\n</div>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {IMyOptions, IMyDateModel, IMyInputFieldChanged, IMyCalendarViewChanged} from 'ngx-mydatepicker';\nimport {NgxMyDatePickerDirective} from 'ngx-mydatepicker';\n\n@Component({\n    selector: 'sample-date-picker-ngmodel',\n    templateUrl: 'sample-date-picker-ngmodel.html',\n    moduleId: module.id,\n})\n\nexport class SampleDatePickerNgModel implements OnInit {\n\n    myDatePickerOptions: IMyOptions = {\n        dateFormat: 'd mmm yyyy',\n        firstDayOfWeek: 'mo',\n        sunHighlight: true,\n        markCurrentDay: true,\n        alignSelectorRight: false,\n        openSelectorTopOfInput: false,\n        minYear: 1900,\n        maxYear: 2200,\n        showSelectorArrow: true,\n        disableDates:[],\n        highlightDates: [],\n        showWeekNumbers: false,\n        markDates: [],\n        selectorHeight: '232px',\n        selectorWidth: '252px',\n        allowSelectionOnlyInCurrentMonth: true,\n        appendSelectorToBody: false\n    };\n\n    @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n    selectedTextNormal: string = '';\n    validDate: boolean = false;\n    inputText: string = \"\";\n\n    model: string = '';   // not initial date set\n\n    defMonth: string = '';\n\n    selectorSizes: Array<string> = new Array('252*232', '220*200', '290*260');\n\n    constructor() {}\n\n    clearDate(): void {\n        this.ngxdp.clearDate();\n    }\n\n    onSelectorSize(size:string) {\n        let copy = this.getCopyOfOptions();\n        if (size === '252*232') {\n            copy.selectorHeight = '232px';\n            copy.selectorWidth = '252px';\n            this.myDatePickerOptions = copy;\n        }\n        else if (size === '220*200') {\n            copy.selectorHeight = '200px';\n            copy.selectorWidth = '220px';\n            this.myDatePickerOptions = copy;\n        }\n        else {\n            copy.selectorHeight = '260px';\n            copy.selectorWidth = '290px';\n            this.myDatePickerOptions = copy;\n        }\n    }\n\n    onShowTodayButton(checked: boolean): void {\n        let copy = this.getCopyOfOptions();\n        copy.showTodayBtn = checked;\n        this.myDatePickerOptions = copy;\n    }\n\n    onOpenSelectorTopOfInput(checked: boolean): void {\n        let copy = this.getCopyOfOptions();\n        copy.openSelectorTopOfInput = checked;\n        this.myDatePickerOptions = copy;\n    }\n\n    onAlignSelectorRight(checked: boolean): void {\n        let copy = this.getCopyOfOptions();\n        copy.alignSelectorRight = checked;\n        this.myDatePickerOptions = copy;\n    }\n\n    onShowSelectorArrow(checked: boolean): void {\n        let copy = this.getCopyOfOptions();\n        copy.showSelectorArrow = checked;\n        this.myDatePickerOptions = copy;\n    }\n\n    onDisableToday(checked: boolean): void {\n        let d: Date = new Date();\n        let copy = this.getCopyOfOptions();\n        copy.disableDates = checked ? [{year: d.getFullYear(), month: d.getMonth() + 1, day: d.getDate()}] : [];\n        this.myDatePickerOptions = copy;\n    }\n\n    onMarkToday(checked: boolean): void {\n        let d: Date = new Date();\n        let copy = this.getCopyOfOptions();\n        copy.markDates = checked ? [{dates: [{year: d.getFullYear(), month: d.getMonth() + 1, day: d.getDate()}], color: 'green'}] : [];\n        this.myDatePickerOptions = copy;\n    }\n\n    onHighlightToday(checked: boolean): void {\n        let d: Date = new Date();\n        let copy = this.getCopyOfOptions();\n        copy.highlightDates = checked ? [{year: d.getFullYear(), month: d.getMonth() + 1, day: d.getDate()}] : [];\n        this.myDatePickerOptions = copy;\n    }\n\n    onShowWeekNumbers(checked: boolean) {\n        let copy = this.getCopyOfOptions();\n        copy.showWeekNumbers = checked;\n        this.myDatePickerOptions = copy;\n    }\n\n    onAllowSelectionOnlyCurrentMonth(checked: boolean): void {\n        let copy = this.getCopyOfOptions();\n        copy.allowSelectionOnlyInCurrentMonth = checked;\n        this.myDatePickerOptions = copy;\n    }\n\n    onAppendSelectorToBody(checked: boolean): void {\n      let copy = this.getCopyOfOptions();\n      copy.appendSelectorToBody = checked;\n      this.myDatePickerOptions = copy;\n    }\n\n    getCopyOfOptions(): IMyOptions {\n        return JSON.parse(JSON.stringify(this.myDatePickerOptions));\n    }\n\n    ngOnInit(): void {\n        console.log('onInit(): SampleDatePickerNgModel');\n    }\n\n    // callbacks\n    onDateChanged(event: IMyDateModel): void {\n        console.log('onDateChanged(): ', event.date, ' - jsdate: ', new Date(event.jsdate).toLocaleDateString(), ' - formatted: ', event.formatted, ' - epoc timestamp: ', event.epoc);\n        if(event.formatted !== '') {\n            this.selectedTextNormal = 'Formatted: ' + event.formatted + ' - epoc timestamp: ' + event.epoc;\n            this.validDate = true;\n            this.inputText = event.formatted;\n        }\n        else {\n            this.selectedTextNormal = '';\n        }\n    }\n\n    onInputFieldChanged(event: IMyInputFieldChanged): void {\n        console.log('onInputFieldChanged(): Value: ', event.value, ' - dateFormat: ', event.dateFormat, ' - valid: ', event.valid);\n        this.validDate = event.valid;\n        this.inputText = event.value;\n    }\n\n    onCalendarToggle(event: number): void {\n        console.log('onCalendarToggle(): Reason: ', event);\n    }\n\n    onCalendarViewChanged(event: IMyCalendarViewChanged): void {\n        console.log('onCalendarViewChanged(): Year: ', event.year, ' - month: ', event.month, ' - first: ', event.first, ' - last: ', event.last);\n    }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}